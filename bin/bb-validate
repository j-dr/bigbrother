#!/usr/bin/env python
from __future__ import print_function, division
#if __name__=='__main__':
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pylab as plt
import dill
import cPickle as pickle
import sys
import os

import bigbrother.config as config

if __name__=="__main__":

    cfgfile = sys.argv[1]
    cfg = config.readCfg(cfgfile)

    try:
        os.makedirs(cfg['Validate']['outdir'])
    except OSError as e:
        pass

    mstry = config.parseConfig(cfg)

    if 'nmap' in cfg['Validate']:
        nmap = cfg['Validate']['nmap']
    else:
        nmap = None

    if 'parallel' in cfg['Validate']:
        parallel = cfg['Validate']['parallel']
    else:
        parallel = False

    mstry.validate(nmap=nmap, parallel=parallel)

    pnames = {}

    noplot = True
    if 'parallel' in cfg['Validate'].keys():
        from mpi4py import MPI
        
        comm = MPI.COMM_WORLD
        rank = comm.Get_rank()
        
        if rank==0:
            noplot = False

            if 'outdir' in cfg['Validate'].keys():
                with open('{0}/{1}_ministry.pkl'.format(cfg['Validate']['outdir'],
                            cfg['Ministry']['ministry_name']), 'w') as fp:
                    dill.dump(mstry, fp)

    else:
        if 'outdir' in cfg['Validate'].keys():
            with open('{0}/{1}_ministry.pkl'.format(cfg['Validate']['outdir'],
                        cfg['Ministry']['ministry_name']), 'w') as fp:
                dill.dump(mstry, fp)
        
        
    for m in mstry.metrics:
        if m.novis or noplot: continue

        plt.clf()
        if m.__class__.__name__ in pnames.keys():
            pn = m.__class__.__name__ + "_{0}".format(pnames[m.__class__.__name__])
            pnames[m.__class__.__name__] += 1
        else:
            pn = m.__class__.__name__
            pnames[m.__class__.__name__] = 1

        print("{0}/{1}_{2}.png".format(cfg['Validate']['outdir'],
                                                      cfg['Ministry']['ministry_name'],
                                                      pn))

        m.visualize(plotname="{0}/{1}_{2}.png".format(cfg['Validate']['outdir'],
                                                      cfg['Ministry']['ministry_name'],
                                                      pn))
