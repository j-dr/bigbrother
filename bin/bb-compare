#!/nfs/slac/g/ki/ki21/cosmo/jderose/anaconda/bin/python
from __future__ import print_function, division
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pylab as plt
import pickle
import sys

import bigbrother.config as config

if __name__=="__main__":

    cfgs   = []
    mstrys = {}
    ncfg = len(sys.argv)-1

    for i in range(ncfg):
        cfg   = config.readCfg(sys.argv[i+1])
        #only one config file should have
        #a Compare field. This defines
        #which catalogs should be compared
        if 'Compare' in cfg.keys():
            midx = i

        #If there is a save file in the cfg
        #use this instead of running validations
        #over again.
        if 'savefile' in cfg['Validate']:
            with open(cfg['Validate']['savefile'], 'r') as fp:
                mstry = pickle.load(fp)
        else:
            mstry = config.parseConfig(cfg)
            mstry.validate()

        cfgs.append( cfg )
        mstrys[cfg['Ministry']['ministry_name']] = mstry

    #Make comparisons specified by by the Compare field
    #each tag under a key in compare corresponds to one plot

    ccfg = cfgs[midx]['Compare']

    for comp in ccfg['metrics'].keys():
        if 'tag' in ccfg['metrics'][comp]:
            for i, tag in enumerate(ccfg['metrics'][comp]['tag']):
                #set up comparison arguments
                plotname = "{0}_{1}_{2}.png".format(comp, tag,
                            ccfg['compare_version'])
                cmtrs = []
                for mn in ccfg['metrics'][comp]['ministry_name']:
                    mstry = mstrys[mn]
                    for mtr in mstry.metrics:
                        if mtr.tag == tag:
                            cmtrs.append(mtr)

                if 'keywords' in ccfg['metrics'][comp].keys():
                    kw = ccfg['keywords'][i]
                else:
                    kw = {}

                if 'labels' not in kw.keys():
                    kw['labels'] = ccfg['metrics'][comp]['ministry_name']

                if 'plotname' not in kw.keys():
                    kw['plotname'] = plotname

                mtr = cmtrs.pop(0)
                mtr.compare(cmtrs, **kw)
        else:
            plotname = "{0}_{1}.png".format(comp, ccfg['compare_version'])
            cmtrs = []
            print(comp)
            print(ccfg['metrics'][comp])
            for i, mn in enumerate(ccfg['metrics'][comp]['ministry_name']):
                mstry = mstrys[mn]
                for mtr in mstry.metrics:
                    if mtr.__class__.__name__ == comp:
                        cmtrs.append(mtr)

            if 'keywords' in ccfg['metrics'][comp].keys():
                kw = ccfg['keywords'][0]
            else:
                kw = {}

            if 'labels' not in kw.keys():
                kw['labels'] = ccfg['metrics'][comp]['ministry_name']

            if 'plotname' not in kw.keys():
                kw['plotname'] = plotname

            mtr = cmtrs.pop(0)
            mtr.compare(cmtrs, **kw)
